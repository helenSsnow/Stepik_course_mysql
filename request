Создание таблицы:
CREATE TABLE book(
    book_id INT PRIMARY KEY AUTO_INCREMENT,
    title VARCHAR(50),
    author VARCHAR(30),
    price DECIMAL(8, 2),
    amount INT
);

Вставка записи в таблицу:
INSERT INTO book(title,author,price,amount)
VALUES("Мастер и Маргарита","Булгаков М.А.", 670.99, 3);
SELECT * FROM book

INSERT INTO book (title, author, price, amount)
VALUES("Белая гвардия", "Булгаков М.А.", 540.50, 5);
INSERT INTO book (title, author, price, amount)
VALUES("Идиот", "Достоевский Ф.М.", 460.00, 10);
INSERT INTO book (title, author, price, amount)
VALUES("Братья Карамазовы", "Достоевский Ф.М.", 799.01, 2);
SELECT * FROM book

Выборка всех данных из таблицы:
SELECT * FROM book

Выборка отдельных столбцов:
SELECT author,title, price FROM book

Выборка отдельных столбцов и присвоение им имен:
SELECT title AS Название, author AS Автор
FROM book;

Выборка данных с созданием вычисляемого столбца:
SELECT title,amount, amount * 1.65 AS pack
FROM book

Выборка данных, вычисляемые столбцы, математические функции:
SELECT title, author, amount, ROUND((price - (price * 30 / 100)), 2) AS new_price
FROM book;

Выборка данных, вычисляемые столбцы, логические функции:
SELECT author, title,
 ROUND(IF(author="Булгаков М.А.", price + price * 0.1, IF(author="Есенин С.А.", price * 1.05, price)), 2) 
AS new_price
FROM book;

Выборка данных по условию:
SELECT author, title, price
FROM book
WHERE amount < 10;

Выборка данных, логические операции:
SELECT title, author, price, amount
FROM book
WHERE (price < 500 OR price > 600) AND (amount * price) >= 5000;

Выборка данных, операторы BETWEEN, IN:
SELECT title, author
FROM book
WHERE price BETWEEN 540.50 AND 800 AND amount IN(2, 3, 5, 7);

Выборка данных с сортировкой:
SELECT author, title
FROM book
WHERE amount BETWEEN 2 AND 14
ORDER BY author DESC, title ASC;

Выборка данных, оператор LIKE:
SELECT title, author
FROM book
WHERE title LIKE '%_ %_' AND author LIKE '%С.%'
ORDER BY title;

Выбор уникальных элементов столбца:
SELECT amount 
FROM book
GROUP BY amount;

Выборка данных, групповые функции SUM и COUNT:
SELECT author AS "Автор",COUNT(amount) AS "Различных_книг" ,SUM(amount) AS "Количество_экземпляров"
FROM book
GROUP BY author;

Выборка данных, групповые функции MIN, MAX и AVG:
SELECT author, MIN(price) AS "Минимальная_цена", MAX(price) AS "Максимальная_цена", AVG(price) AS "Средняя_цена"
FROM book
GROUP BY author;

Выборка данных c вычислением, групповые функции:
SELECT author,SUM(price * amount) AS "Стоимость",
              ROUND(SUM(((price * amount) * 0.18) / 1.18), 2) AS "НДС",
              ROUND(SUM((price * amount) - (((price * amount) * 0.18) / 1.18)), 2) AS "Стоимость_без_НДС"
FROM book
GROUP BY author;

Вычисления по таблице целиком:
SELECT MIN(price) AS "Минимальная_цена",
       MAX(price) AS "Максимальная_цена",
       ROUND(AVG(price), 2) AS "Средняя_цена"
FROM book;

Выборка данных по условию, групповые функции:
SELECT ROUND(AVG((price)), 2) AS "Средняя_цена",
       ROUND(SUM((price * amount)), 2) AS "Стоимость"
FROM book
WHERE amount >= 5 AND amount <= 14;

Выборка данных по условию, групповые функции, WHERE и HAVING:
SELECT author, SUM(price * amount) AS "Стоимость"
FROM book
WHERE title <> "Идиот" AND title <> "Белая гвардия"
GROUP BY author 
HAVING SUM(price * amount) > 5000
ORDER BY author DESC;

Вложенный запрос, возвращающий одно значение:
SELECT author, title, price
FROM book
WHERE price <= (
         SELECT AVG(price) 
         FROM book
      )
ORDER by price DESC;

Использование вложенного запроса в выражении:
SELECT author, title, price
FROM book
WHERE price <= (
            SELECT (MIN(price) + 150)
            FROM book)
ORDER BY price ASC;

Вложенный запрос, оператор IN:
SELECT author, title, amount
FROM book
WHERE amount IN(
            SELECT amount 
                    FROM book 
                    GROUP BY amount 
                    HAVING COUNT(amount) = 1
    );
    
Вложенный запрос, операторы ANY и ALL:
SELECT author, title, price
FROM book
WHERE price < ANY(SELECT MIN(price) FROM book GROUP BY author);

Вложенный запрос после SELECT:
SELECT title, author, amount,(
    SELECT(
            (SELECT MAX(amount)
             FROM book) - amount) 
          )AS "Заказ"
FROM book
WHERE (SELECT(
            (SELECT MAX(amount)
             FROM book) - amount)
       ) > 0;

Запросы на обновление нескольких столбцов:
UPDATE book 
SET buy = IF(buy > amount, amount, buy),
price = IF(buy = 0, price * 0.9, price);
SELECT * FROM book;
